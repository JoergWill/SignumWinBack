<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LanguageFlags.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="LanguageFlags.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA4
        EAAAAk1TRnQBSQFMAgEBCwEAAVABBwFQAQcBEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAIBYFzwZ6BRYQAAH5
        CEcE+QMgAfkIRwT5AyABoQSnBFkCOAL5AyAQAAH5A+MFFwZHASAB+QTjBBcGRwEgAYUCtALPAeUEXgFZ
        BEcBIBAAAfkB4wMXB0cC+QFHASAB+QHjARcB4wGUAeMHRwH5AUcBIAGhAbQDrQVeAVkERwEgEAABLAF1
        AVMBbwJNAW8BUwNNAywBUwErASAC4wGUAbYBlAEXBkYBQAFGASABoQG0A60FXgFZA/kBRwEgEAAB+wHl
        AV4BCAFZAVIBmQVeAvsBXgE3AekBjgGTAbwBzwG8AZMIaQEfAaEBtAOtBV4BWQFHAvkBRwEgEAAB+wHl
        AV4BGwF0AeMBGwFZBV4B+wFeATcBhgG1AbwBtQLPAbYFzwKoAc8BBAGhAbQDrQVeAVkCRwH5AUcBIBAA
        AfsC5QEaAW8BlAEaAVkFXgH7AV4BNwHHAdYBkwGOAbYBjgEWAs8FrQHPAYUBoQG0Ac8CrQVeAVkCRwH5
        AUcBIBAAAfsC5QGaAeMBGgGaAVkHXgE3AccB1gHjARYB8wGUAeMDzwStAc8BhQGhAbQCzwGtBV4BWQRH
        AfkQAAH7A+UC4wGaCF4BNwHHAdYB4wG9AfQBvQHjA88ErQHPAYUBxwK0Ac8BrQHlBV4ERwH5EAAB+wPl
        AXoBdQHlCF4BNwGnAdYBFgGUAfMBlAHjAbUDtAPPAbQBhQHHArQCzwHlBV4DRwEXAfkQAAE4BHoKWQEy
        Ac8B3QEWAeMBvQGUAeMECQO1AQkBpwHHA7QBzwHlBV4DRwEXAfkQAAH5ARYD4wYXA0cBFwH5AfQB/wWU
        BP8E9AHwAccEtALlBF4DRwEXAfkQAAH5ARYH4wYXAfkC/wW9Bv8C9AHzAccEtAblBBcB+RAAAfkKFwRH
        AfkN/wL0AfMBxwTPAeUFXgRHAfkQABD5CP8G9ALzBccGOAX5EAAG7CoWBbUD8AK8AQcFbwEhA0MCEQNH
        BPkDIAH5CEcE+QMgAfkIRwL5BSABrQPPAa0CvAQHBEYBIAEhBXIDFwZHASAB+QPjBRcGRwEgAfkD4wUX
        BkcBIAGtBAkE8wLyBOMBIAEhAXIETwZHAvkBRwEgAfkB4wMXB0cC+QFHASAB+QHjAxcHRwL5AUcBIAHP
        AgkCuwPzA/IDFwHjASABIQFyAk8BUAFRAk0DRwP5AUcCIAEWA2kHRgJAAUYBHwEgAeMEFwZGAkABRgEg
        Ac8CCQG7AbUD8wPyAxcB4wEgASEBcgFPAVACWAFTAVIBTQNHAvkBRwEgAT4BjgKCC2gBCwHpAY4CiAZp
        AmgCYgFpAT4BzwMJAbsE8wLyAxcB4wEgASECcgFRAVgBdAF1AlgERwH5AUcBIAGiAa8CzwOoBKcDhgGn
        AV8BxAHQBqgEpwLEAagBoQG0BAkB9ATzAfIB4wIXAeMBIAEhAnIBeQFSAZQBGgFSAVkGRwEgAaEEzwqn
        AQQB/ALmDMgBoQG0BAkB9AXzAuMBFwHjASABIQJyAXkBTQHyAfMB4wFZBkcBIAGhAc8BjQKOAa0JpwEE
        AfwD5gvIAaEBtAQJAfQF8wLjARcB4wEgASECcgF5AU0BGgHxAeMBWQZHASABoQHPAbcB8wG3Aa0JpwEE
        AfwD5gvIAaEBtAHdAwkF8wHyBOMBIAEhAnIBeQF0ApQBUwFZBUcBFwEgAaEBtQG2AfMBtgXPAa0DpwHP
        AQQByAHWDeYBoQG0Ad0DCQXzAfID4wEWASABIQJyAnkBdAFNAlMFRwEXASABpwEJAbUB3QG0B7UBtAHP
        AbUBhgHmAd0DCQrWAacBtAHdAwkF8wHyARYC4wEWASABIQGXAnIBeAF5AXoBUwIXBEcBFwH5AfMB/wG1
        AbQBzwb/BPQB8QH0Cv8E9AHxAbQB3QMJBfMB8gEWAuMBFgEgASEBlwJyAngCdQHjBhcB+QH0Af8D3Qj/
        AvQB8w3/AvQB8gG0Ad0DCQX0AfMEFgEgASEFcgUXBEcB+QH0Cf8F9AHzDf8C9AHzAbQECQH0BfMC4wIX
        ASAGIQr5CPQF8wPyCP8G9ALzBbQC8QLwArwC+QMgEJkQ7ATPBa4H7AOUDZMBUgd0B1IBSwEhBUkDEQMh
        Aw8BAAEEBIYEZgZlAQoBdAGUDJMBHAFvAVIEoAOaB3oBSwEhBXIJTwEAAQQEtAGzB60CiwEKAfAB/wX0
        BPMC8gLxAeMBUgGgBnoGWQF6AVEBIQFyCk8CAgFPAQABBAG0Bq0EiwKKAYsBCgGUAb0ClAMWA+MEFwGU
        AUwBUgGaBHoHWQFSAXoBSwEhAZcJTwMCAU8BAAEEAbQBswWtBYsBigGtAQoBlAG9AZoFlAMWA+MBlAFu
        AUsBmgV1BFMDTQF1AUUBSQGXBHIJTwEPAYYBtQe0Ba0BtAFmAfAB9APzAfIC8QHwBBoBvAG9AewBRgGa
        ARYE4wMXBEcBdQFFAbwB8wPyBPACCAO8AfABBwG8BPMD8gPxA/AB8QHvAc8BCQPVArMBrQGnAeMEFwGU
        AW4BRgGaARYD4wQXBEcBFgFFCf8G9AHyAfMI/wb0AfABzwEZAc4B3AHOAbQBrAG0AccDlAIWARoBdAFG
        AZoBFgTjAxcERwEWAUUJ/wb0AfIB9An/BfQB8AHPAfQBzgEZAc4B3QHNAQkBrAUaAfIBHAFGAZoCFgTj
        AxcDRwEWAUUK/wX0AfIB9Ar/BPQB8AHPAQkBzgHVAc4B1AHOAdQBrALjAxcBlAFvAUUBmQdvBUUBdAFE
        AW8BvQiUAZMDFgGTAW8BFga9A7cElAG3AW8BzwIJAc4BCQHOAQkBzgGsBJQBUwG9AZMBEwEHBOwCbgFt
        AxICRAHsARUBIAEWAm8EFwdGAR8BQQGUBRYG4wEXAeMB+QHPAQkBGQHOARkBzgHdAc4BzQEaA70BegEb
        AZkBFAEHBOwDbQISAhMBFAHsARUBIAEWA28DFwdGAR8B+QEWBeMFFwJHARcB+QHPAQkB1QLUAc4B1ALO
        ARYC4wEXAUcBlAFvARQBBwL3ApID7QLsA+sB7QEVASACFgZvBBcBRgEXAR8B+QQWBuMEFwH5Ac8BGQHW
        Ad0B1QEJAdUBCQHVBr0BdAEUBe0F7ATrARUBIAQXAm8CFwZGAR8B+QwXAkcB+QHPAd0B1gHdAdYB3QG1
        AfABtQK9BBoBkwETBBQLFQ8gAR8Q+QnPARYB4wMXAkwBQgFNAT4HAAE+AwABKAMAAUADAAEwAwABAQEA
        AQEFAAGAAQEWAAP//wCCAAs=
</value>
  </data>
</root>