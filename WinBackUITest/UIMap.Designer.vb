'------------------------------------------------------------------------------
'  <auto-generated>
'      This code was generated by coded UI test builder.
'      Version: 14.0.0.0
'
'      Changes to this file may cause incorrect behavior and will be lost if
'      the code is regenerated.
'  </auto-generated>
' ------------------------------------------------------------------------------

Imports System
Imports System.CodeDom.Compiler
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Text.RegularExpressions
Imports System.Windows.Input
Imports Microsoft.VisualStudio.TestTools.UITest.Extension
Imports Microsoft.VisualStudio.TestTools.UITesting
Imports Microsoft.VisualStudio.TestTools.UITesting.WinControls
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard
Imports Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse
Imports MouseButtons = System.Windows.Forms.MouseButtons

Namespace WinBackUITest
    
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Partial Public Class UIMap
        
        '''<summary>
        '''Prüft ob WinBack gestartet wurde
        '''</summary>
        Public Sub Check_WinBack_Started()
            Dim uIWinBackV1000Text As WinText = Me.UIWinBackUITestWindow.UIStatusStrip1StatusBar.UIWinBackV1000Text

            'Click 'WinBack V1.0.0.0' label
            Mouse.Click(uIWinBackV1000Text, New Point(24, 10))
        End Sub
        
        '''<summary>
        '''CheckStatusLine - Use 'CheckStatusLineExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub CheckStatusLine()
            Dim uIWinBackV1000Text As WinText = Me.UIWinBackUITestWindow.UIStatusStrip1StatusBar.UIWinBackV1000Text

            'Verify that the 'DisplayText' property of 'WinBack V1.0.0.0' label equals 'WinBack'
            Assert.AreEqual(Me.CheckStatusLineExpectedValues.UIWinBackV1000TextDisplayText, uIWinBackV1000Text.DisplayText, "Statuszeile WinBack fehlt")
        End Sub
        
        '''<summary>
        '''TestLinien - Use 'TestLinienParams' to pass parameters into this method.
        '''</summary>
        Public Sub TestLinien()
            Dim uIRibbon1Client As WinClient = Me.UIWinBackUITestWindow.UIRibbon1Window.UIRibbon1Client
            Dim uIVNCviewList As WinList = Me.UIWinBackUITestWindow.UILinien_MainWindow.UIVNCviewWindow.UIVNCviewList

            'Click 'Ribbon1' client
            Mouse.Click(uIRibbon1Client, New Point(436, 43))

            'Select 'L1: Teig' in 'VNCview' list box
            uIVNCviewList.SelectedItemsAsString = Me.TestLinienParams.UIVNCviewListSelectedItemsAsString
        End Sub
        
        #Region "Properties"
        Public Overridable ReadOnly Property CheckStatusLineExpectedValues() As CheckStatusLineExpectedValues
            Get
                If (Me.mCheckStatusLineExpectedValues Is Nothing) Then
                    Me.mCheckStatusLineExpectedValues = New CheckStatusLineExpectedValues()
                End If
                Return Me.mCheckStatusLineExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property TestLinienParams() As TestLinienParams
            Get
                If (Me.mTestLinienParams Is Nothing) Then
                    Me.mTestLinienParams = New TestLinienParams()
                End If
                Return Me.mTestLinienParams
            End Get
        End Property
        
        Public ReadOnly Property UIWinBackUITestWindow() As UIWinBackUITestWindow
            Get
                If (Me.mUIWinBackUITestWindow Is Nothing) Then
                    Me.mUIWinBackUITestWindow = New UIWinBackUITestWindow()
                End If
                Return Me.mUIWinBackUITestWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mCheckStatusLineExpectedValues As CheckStatusLineExpectedValues
        
        Private mTestLinienParams As TestLinienParams
        
        Private mUIWinBackUITestWindow As UIWinBackUITestWindow
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'CheckStatusLine'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class CheckStatusLineExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that the 'DisplayText' property of 'WinBack V1.0.0.0' label equals 'WinBack'
        '''</summary>
        Public UIWinBackV1000TextDisplayText As String = "WinBack"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'TestLinien'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class TestLinienParams
        
        #Region "Fields"
        '''<summary>
        '''Select 'L1: Teig' in 'VNCview' list box
        '''</summary>
        Public UIVNCviewListSelectedItemsAsString As String = "L1: Teig"
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class UIWinBackUITestWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "WinBack - UI-Test"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("WinBack - UI-Test")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIRibbon1Window() As UIRibbon1Window
            Get
                If (Me.mUIRibbon1Window Is Nothing) Then
                    Me.mUIRibbon1Window = New UIRibbon1Window(Me)
                End If
                Return Me.mUIRibbon1Window
            End Get
        End Property
        
        Public ReadOnly Property UIStatusStrip1StatusBar() As UIStatusStrip1StatusBar
            Get
                If (Me.mUIStatusStrip1StatusBar Is Nothing) Then
                    Me.mUIStatusStrip1StatusBar = New UIStatusStrip1StatusBar(Me)
                End If
                Return Me.mUIStatusStrip1StatusBar
            End Get
        End Property
        
        Public ReadOnly Property UILinien_MainWindow() As UILinien_MainWindow
            Get
                If (Me.mUILinien_MainWindow Is Nothing) Then
                    Me.mUILinien_MainWindow = New UILinien_MainWindow(Me)
                End If
                Return Me.mUILinien_MainWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIRibbon1Window As UIRibbon1Window
        
        Private mUIStatusStrip1StatusBar As UIStatusStrip1StatusBar
        
        Private mUILinien_MainWindow As UILinien_MainWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class UIRibbon1Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "Ribbon1"
            Me.WindowTitles.Add("WinBack - UI-Test")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIRibbon1Client() As WinClient
            Get
                If (Me.mUIRibbon1Client Is Nothing) Then
                    Me.mUIRibbon1Client = New WinClient(Me)
                    Me.mUIRibbon1Client.SearchProperties(WinControl.PropertyNames.Name) = "Ribbon1"
                    Me.mUIRibbon1Client.WindowTitles.Add("WinBack - UI-Test")
                End If
                Return Me.mUIRibbon1Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIRibbon1Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class UIStatusStrip1StatusBar
        Inherits WinStatusBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinStatusBar.PropertyNames.Name) = "StatusStrip1"
            Me.WindowTitles.Add("WinBack - UI-Test")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIWinBackV1000Text() As WinText
            Get
                If (Me.mUIWinBackV1000Text Is Nothing) Then
                    Me.mUIWinBackV1000Text = New WinText(Me)
                    Me.mUIWinBackV1000Text.SearchProperties(WinText.PropertyNames.Name) = "WinBack V1.0.0.0"
                    Me.mUIWinBackV1000Text.WindowTitles.Add("WinBack - UI-Test")
                End If
                Return Me.mUIWinBackV1000Text
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIWinBackV1000Text As WinText
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class UILinien_MainWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "Linien_Main"
            Me.WindowTitles.Add("WinBack - UI-Test")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIVNCviewWindow() As UIVNCviewWindow
            Get
                If (Me.mUIVNCviewWindow Is Nothing) Then
                    Me.mUIVNCviewWindow = New UIVNCviewWindow(Me)
                End If
                Return Me.mUIVNCviewWindow
            End Get
        End Property
        
        Public ReadOnly Property UITBezeichnungWindow() As UITBezeichnungWindow
            Get
                If (Me.mUITBezeichnungWindow Is Nothing) Then
                    Me.mUITBezeichnungWindow = New UITBezeichnungWindow(Me)
                End If
                Return Me.mUITBezeichnungWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIVNCviewWindow As UIVNCviewWindow
        
        Private mUITBezeichnungWindow As UITBezeichnungWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class UIVNCviewWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "VNCview"
            Me.WindowTitles.Add("WinBack - UI-Test")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIVNCviewList() As WinList
            Get
                If (Me.mUIVNCviewList Is Nothing) Then
                    Me.mUIVNCviewList = New WinList(Me)
                    Me.mUIVNCviewList.WindowTitles.Add("WinBack - UI-Test")
                End If
                Return Me.mUIVNCviewList
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIVNCviewList As WinList
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "14.0.23107.0")>  _
    Public Class UITBezeichnungWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "tBezeichnung"
            Me.WindowTitles.Add("WinBack - UI-Test")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITBezeichnungEdit() As WinEdit
            Get
                If (Me.mUITBezeichnungEdit Is Nothing) Then
                    Me.mUITBezeichnungEdit = New WinEdit(Me)
                    Me.mUITBezeichnungEdit.SearchProperties(WinEdit.PropertyNames.Name) = "IP-Adresse:"
                    Me.mUITBezeichnungEdit.WindowTitles.Add("WinBack - UI-Test")
                End If
                Return Me.mUITBezeichnungEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITBezeichnungEdit As WinEdit
        #End Region
    End Class
End Namespace
