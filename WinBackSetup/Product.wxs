<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">

  <!-- ==================================================================================== -->
  <!-- Defines & Variables -->
  <!-- ==================================================================================== -->

  <!-- Project exe-File -->
  <?define MAINEXE=$(var.WinBackServerTask.TargetFileName) ?>
  <!-- Full version number to display -->
  <?define VersionNumber=!(bind.FileVersion.WinBackExe) ?>
  <!-- Productname -->
  <?define ApplicationName="WinBack-AddIn" ?>

  <!-- Upgrade code HAS to be the same for all updates. -->
  <?define UpgradeCode="d8cde5e3-5e3e-478a-ab43-f40deb46c121" ?>

  <!-- 32-bit / 64-bit variables -->
  <?if $(var.Platform) = x64 ?>
  <?define Win64 = "yes" ?>
  <?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
  <?define WinBackExeSourcePath = "$(var.ProjectDir)..\WinBackServerTask\bin\x64\Release\WinBackServerTask.exe" ?>
  <?define WinBackIniSourcePath = "$(var.ProjectDir)..\WinBack.ini" ?>
  <?else ?>
  <?define Win64 = "no" ?>
  <?define PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
  <?define WinBackExeSourcePath = "$(var.ProjectDir)..\WinBackServerTask\bin\Release\WinBackServerTask.exe" ?>
  <?define WinBackIniSourcePath = "$(var.ProjectDir)..\WinBack.ini" ?>
  <?endif ?>

  <!-- ==================================================================================== -->
  <!-- Package start -->
  <!-- ==================================================================================== -->

  <!-- The upgrade code must never change as long as the product lives! -->
  <!-- Product IDs must be autogenerated (*) or else major upgrades will not work -->
  <Product Id="*" Name="$(var.ApplicationName)" Language="!(loc.Language)" Version="$(var.VersionNumber)" Manufacturer="!(loc.ManufacturerFullName)" UpgradeCode="$(var.UpgradeCode)" >

    <!-- Package IDs are valid for a single package version only - they are autogenerated by WiX -->
    <!-- For 64-bit Windows Installer packages, InstallerVersion is set to 200 by default -->
    <!-- And ALWAYS install per machine!!! -->
    <Package Id="*" InstallerVersion="200" Compressed="yes" InstallScope="perMachine"  Description="!(loc.ProductDescription)" Comments="!(loc.Comments) $(var.VersionNumber)" />

    <!-- Requirements -->
    <PropertyRef Id="NETFRAMEWORK40FULL" />
    <Condition Message="!(loc.ErrorFramework)">NETFRAMEWORK40FULL</Condition>
    <Condition Message="!(loc.ErrorAdminRights)">Privileged</Condition>

    <!-- License agreement text: dummy. Real text is set in WXS file -->
    <WixVariable Id="WixUILicenseRtf" Value="dummy" />

    <!-- UI customization -->
    <WixVariable Id="WixUIBannerBmp" Value="Resources\Logo.jpg" />
    <WixVariable Id="WixUIDialogBmp" Value="Resources\Dialog.bmp" />

    <!-- Define icons (ID should not be longer than 18 chars and must end with ".exe") -->
    <Icon Id="Icon.exe" SourceFile="Resources\WinBack.ico" />

    <!-- Set properties for add/remove programs -->
    <Property Id="ARPPRODUCTICON" Value="Icon.exe" />
    <!-- Remove repair -->
    <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />
    <!-- Remove modify -->
    <Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />

    <!-- Upgrade logic -->
    <!-- AllowSameVersionUpgrades -> Always upgrade, never allow two versions to be installed next to each other -->
    <!-- AllowSameVersionUpgrades causes ICE61 which must be ignored -->
    <MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)" AllowSameVersionUpgrades="yes" />

    <!-- This is the main installer sequence run when the product is actually installed -->
    <InstallExecuteSequence>
      <!-- Determine the install location after the install path has been validated by the installer -->
      <Custom Action="SetARPINSTALLLOCATION" After="InstallValidate"></Custom>
    </InstallExecuteSequence>
    <!-- Set up ARPINSTALLLOCATION property (http://blogs.technet.com/b/alexshev/archive/2008/02/09/from-msi-to-wix-part-2.aspx) -->
    <CustomAction Id="SetARPINSTALLLOCATION" Property="ARPINSTALLLOCATION" Value="[INSTALLDIR]" />

    <Binary Id="VbCa" SourceFile="$(var.WinBackSetup_CA.TargetDir)\ManagedSetupHelperDll.CA.DLL"/>
    <CustomAction Id="VBCa" BinaryKey="VbCa" DllEntry="VBCustomAction" />
    <InstallUISequence>
      <Custom Action="VBCa" After="CostFinalize" />
    </InstallUISequence>
    
    <!-- ==================================================================================== -->
    <!-- Launch conditions -->
    <!-- ==================================================================================== -->

    <!-- Check minimum OS version -->
    <!-- If not, the installation is aborted. -->
    <!-- By doing the (Installed OR ...) property means that this condition will only be evaluated if the app is being installed and not on uninstall or changing -->
    <!-- Note: Under a Product element, a condition becomes a LaunchCondition entry. -->
    <Condition Message="!(loc.OS2Old)">
      <![CDATA[Installed OR (VersionNT >= 600)]]>
    </Condition>

    <!-- ==================================================================================== -->
    <!-- Start to build directory structure -->
    <!-- ==================================================================================== -->

    <!-- We do not have more than one medium (Floppy, CD, ...). Everything in one file. -->
    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

    <!-- Outermost folder (kind of virtual). Fixed entry. -->
    <Directory Id="TARGETDIR" Name="SourceDir">

      <!-- We start building our directory structure here -->
      <!-- "ProgramFilesFolder" is a variable containing the absolute path. -->
      <!-- For a list of folder variables, see: http://msdn.microsoft.com/en-us/library/aa372057%28VS.85%29.aspx -->
      <Directory Id="$(var.PlatformProgramFilesFolder)">

        <!-- All folders from here on are relative to their parent. -->
        <Directory Id="ProgramFilesHK" Name="!(loc.ManufacturerName)">

          <!-- INSTALLDIR is a property name. We need it later for the UI (to be able to change the install dir. -->
          <Directory Id="INSTALLDIR" Name="!(loc.ApplicationName)">

            <!-- Define components, the building blocks of MSIs. -->
            <!-- Rule: A component should only contain items that belong together so strongly that they always need to be installed or removed together. -->
            <!-- If this means a single file, then your components will contain a single file each. This is not only normal but exactly what you're -->
            <!-- to do. Don't be afraid, Windows Installer can efficiently handle thousands of components or more, if needed. -->

            <!-- Installation directory as a component so it can be emptied during uninstall (by default files added by someone other than Windows Installer are not removed) -->
            <Component Id="INSTALLDIR_comp" Guid="99FFB822-CDCA-4F09-AE41-A0889C969559">
              <CreateFolder />
              <RemoveFile Id="RemoveFilesFromAppDirectory" Name="*.*" On="uninstall" />
            </Component>

            <!-- Main program file -->
            <Component Id="WINBACKEXE_comp" Guid="*" Win64="$(var.Win64)">
              <File Source="$(var.WinBackExeSourcePath)" Id="WinBackExe" KeyPath="yes" />
              <!--KEIN SERVICE !!-->
              <!--<ServiceInstall Id="ServiceInstaller" Account="LocalSystem" Description="!(loc.ServiceDescription)" DisplayName="!(loc.ServiceDisplayName)" ErrorControl="normal"-->
                              <!--LoadOrderGroup="NetworkProvider" Name="uberAgentSvc" Start="auto" Type="ownProcess" Vital="yes" />-->
              <!--<ServiceControl Id="ServiceControl" Name="uberAgentSvc" Start="install" Stop="both" Remove="uninstall" />-->
            </Component>

            <!-- Configuration file -->
            <Component Id="WINBACKINI_comp" Guid="2F77C4CA-B6D8-46B7-849E-D8126C2A4DB3">
              <File Source="$(var.WinBackIniSourcePath)" Id="WinBackIni" KeyPath="yes" />
              <IniFile Id="ConfigFile" Action="addLine" Directory="INSTALLDIR" Name="uberAgent.conf" Section="Receiver" Key="Servers" Value="[SERVERS]" />
            </Component>

          </Directory>
        </Directory>
      </Directory>

      <!-- Registry entries -->
      <Component Id="RegValInstallLocation_comp" Guid="C2D3C6CE-BDDB-4D89-A1B9-760C34BF1D08">
        <!-- Do NOT use the application's default registry key here, because THIS key will be removed on uninstall  -->
        <!-- (important when installing a newer version, because that is uninstall followed by install) -->
        <RegistryKey Root="HKLM" Key="Software\!(loc.ManufacturerName)\InstalledProducts\!(loc.ApplicationName)">
          <RegistryValue Name="InstallLocation" Value="[INSTALLDIR]" Type="string" KeyPath="yes" />
        </RegistryKey>
      </Component>
    </Directory>

    <!-- ==================================================================================== -->
    <!-- End of directory structure -->
    <!-- ==================================================================================== -->


    <!-- ==================================================================================== -->
    <!-- Features define which parts of the application can be installed (custom setup) -->
    <!-- ==================================================================================== -->

    <Feature Id="Complete" Title="!(loc.ApplicationName)" Description="!(loc.FeatureCompleteDescription)" Display="expand" Level="1" ConfigurableDirectory="INSTALLDIR">

      <!-- A feature block for the main (GUI) program and all its dependencies -->
      <Feature Id="MainProgram" Title="!(loc.FeatureMainProgramTitle)" Description="!(loc.FeatureMainProgramDescription)" Level="1">
        <ComponentRef Id="INSTALLDIR_comp" />
        <ComponentRef Id="WINBACKEXE_comp" />
        <ComponentRef Id="WINBACKINI_comp" />

        <!-- Registry entries -->
        <ComponentRef Id="RegValInstallLocation_comp" />
      </Feature>
    </Feature>

    <UI>
      <!-- Define the installer UI -->
      <!-- To add Right click on your project in Solution Explorer and select Add Reference... -->
      <!-- Select the <strong>WixUIExtension.dll</strong> assembly from the list and click Add -->
      <UIRef Id="UI_Main" />
    </UI>

    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
    <Property Id="WIXUI_SERVERS" Value="SERVERS" />

  </Product>
</Wix>
