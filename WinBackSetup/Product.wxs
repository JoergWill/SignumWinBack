<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">

  <!-- ==================================================================================== -->
  <!-- Defines & Variables -->
  <!-- ==================================================================================== -->

  <!-- Full version number to display -->
  <?define VersionNumber=!(bind.FileVersion.WinBackExe) ?>
  <!-- Productname -->
  <?define ApplicationName="WinBack-AddIn" ?>

  <!-- Upgrade code HAS to be the same for all updates. -->
  <?define UpgradeCode="d8cde5e3-5e3e-478a-ab43-f40deb46c121" ?>

  <!-- Debug or Release $(var.WinBackServertask.Configuration)-->
  <?if $(var.WinBackServerTask.Configuration) = Release ?>
  <?define Configuration = "Release" ?>
  <?else ?>
  <?ifndef Configuration ?>
  <?define Configuration = "Debug" ?>
  <?endif?>
  <?endif ?>

  <!-- 32-bit / 64-bit variables $(var.Platform) -->
  <?if $(var.Platform) = x64 ?>
  <?define Win64 = "yes" ?>
  <?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
  <?define WinBackExeSourcePath = "$(var.ProjectDir)..\WinBackServerTask\bin\x64\$(var.Configuration)" ?>
  <?define WinBackIniSourcePath = "$(var.ProjectDir)..\WinBack.ini" ?>
  <?else ?>
  <?define Win64 = "no" ?>
  <?define PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
  <?define WinBackExeSourcePath = "$(var.ProjectDir)..\WinBackServerTask\bin\$(var.Configuration)" ?>
  <?define WinBackIniSourcePath = "$(var.ProjectDir)..\WinBack.ini" ?>
  <?endif ?>
  
  <!-- ==================================================================================== -->
  <!-- Package start -->
  <!-- ==================================================================================== -->

  <!-- The upgrade code must never change as long as the product lives! -->
  <!-- Product IDs must be autogenerated (*) or else major upgrades will not work -->
  <Product Id="*" Name="$(var.ApplicationName)" Language="!(loc.Language)" Version="$(var.VersionNumber)" Manufacturer="!(loc.ManufacturerFullName)" UpgradeCode="$(var.UpgradeCode)" >
    <!-- Package IDs are valid for a single package version only - they are autogenerated by WiX -->
    <!-- For 64-bit Windows Installer packages, InstallerVersion is set to 200 by default -->
    <!-- And ALWAYS install per machine!!! -->
    <Package Id="*" InstallerVersion="200" Compressed="yes" InstallScope="perMachine"  Description="!(loc.ProductDescription)" Comments="!(loc.Comments) $(var.VersionNumber)" />

    <!-- Requirements -->
    <PropertyRef Id="NETFRAMEWORK40FULL" />
    <Condition Message="!(loc.ErrorFramework)">NETFRAMEWORK40FULL</Condition>
    <Condition Message="!(loc.ErrorAdminRights)">Privileged</Condition>

    <!-- License agreement text: dummy. Real text is set in WXS file -->
    <WixVariable Id="WixUILicenseRtf" Value="dummy" />

    <!-- UI customization -->
    <!-- Size 493x58 Top-Banner -->
    <WixVariable Id="WixUIBannerBmp" Value="Resources\WixUIBanner.bmp" />
    <!-- Size 493x312 Dialog-Background -->
    <WixVariable Id="WixUIDialogBmp" Value="Resources\WixUIDialog.bmp" />
    <!-- Define icons (ID should not be longer than 18 chars and must end with ".exe") -->
    <Icon Id="Icon.exe" SourceFile="Resources\WinBack.ico" />

    <!-- Set properties for add/remove programs -->
    <Property Id="ARPPRODUCTICON" Value="Icon.exe" />
    <!-- Remove repair -->
    <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />
    <!-- Remove modify -->
    <Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />
    
    <!-- Upgrade logic -->
    <!-- AllowSameVersionUpgrades -> Always upgrade, never allow two versions to be installed next to each other -->
    <!-- AllowSameVersionUpgrades causes ICE61 which must be ignored -->
    <MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)" AllowSameVersionUpgrades="yes" />

    <!-- This is the main installer sequence run when the product is actually installed -->
    <InstallExecuteSequence>
      <!-- Determine the install location after the install path has been validated by the installer -->
      <Custom Action="SetARPINSTALLLOCATION" After="InstallValidate"></Custom>
    </InstallExecuteSequence>

    <!-- ==================================================================================== -->
    <!-- Custom Actions -->
    <!-- ==================================================================================== -->

    <!-- WinBack Datenbank IP-Adresse-->
    <Property Id="WINBACKIPADR" Value="127.0.0.1" Secure="yes" />
    <!-- OrgaBack Datenbank -->
    <Property Id="ORGABACKMAIN" Value="300" Secure="yes" />
    <Property Id="ORGABACKADMN" Value="vd3" Secure="yes" />
    <Property Id="ORGABACKUSER" Value="sa" Secure="yes" />
    <Property Id="ORGABACKPASS" Value="YK2tvndD+Bx1pZgUMSsMMIqHAvAi5WQaXKaf2SYZnII=" Secure="yes" />

    <!-- Custom Action - Determine OrgaBack Installation-Path from Registry -->
    <Binary Id="VbCa" SourceFile="$(var.WinBackSetup_CA.TargetDir)\ManagedSetupHelperDll.CA.DLL"/>

    <!-- Set up ARPINSTALLLOCATION property (http://blogs.technet.com/b/alexshev/archive/2008/02/09/from-msi-to-wix-part-2.aspx) -->
    <CustomAction Id="SetARPINSTALLLOCATION" Property="ARPINSTALLLOCATION" Value="[INSTALLDIR]" />
    <!-- Custom Action - Determine OrgaBack Installation-Path from Registry -->
    <CustomAction Id="VBCa" BinaryKey="VbCa" DllEntry="VBCustomAction" />

    <InstallUISequence>
      <Custom Action="VBCa" After="CostFinalize" />
    </InstallUISequence>
    
    <!-- ==================================================================================== -->
    <!-- Launch conditions -->
    <!-- ==================================================================================== -->

    <!-- Check minimum OS version -->
    <!-- If not, the installation is aborted. -->
    <!-- By doing the (Installed OR ...) property means that this condition will only be evaluated if the app is being installed and not on uninstall or changing -->
    <!-- Note: Under a Product element, a condition becomes a LaunchCondition entry. -->
    <Condition Message="!(loc.OS2Old)">
      <![CDATA[Installed OR (VersionNT >= 600)]]>
    </Condition>

    <!-- ==================================================================================== -->
    <!-- Start to build directory structure -->
    <!-- ==================================================================================== -->

    <!-- We do not have more than one medium (Floppy, CD, ...). Everything in one file. -->
    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

    <!-- Directories -->
		<Directory Id="TARGETDIR" Name="SourceDir">
			<Directory Id="ADDIN" Name="AddIn"/>
		</Directory>
	
    <!-- Add all Installation Files(exe/dll/..) at this list -->
		<DirectoryRef Id="ADDIN" FileSource="$(var.WinBackExeSourcePath)">
      <Component Id="SHAREDCOMPONENTS" Guid="9f9cb55d-d6f5-4ead-853e-352ee0155c1f" >

        <!-- Winback AddIn -->
        <File Id="AddInDll" Name="WinBackAddIn.dll" />
        <File Id="AddInPdb" Name="WinBackAddIn.pdb" />

        <!-- Editor-Komponente für Rezeptverwaltung -->
        <File Id="EnhEditDll" Name="EnhancedEdit.dll" />
        <File Id="EnhEditPdb" Name="EnhancedEdit.pdb" />

        <!-- Infralution Virtual Tree -->
        <File Id="IfrCommonDll" Name="Infralution.Common.dll" />
        <File Id="IfrContrlDll" Name="Infralution.Controls.dll" />
        <File Id="IfrVrTreeDll" Name="Infralution.Controls.VirtualTree.dll" />

        <!-- WinFormsUI Docking -->
        <File Id="WinFormsUIDll" Name="WeifenLuo.WinFormsUI.Docking.dll" />
        <File Id="WinFormsUI2015Dll" Name="WeifenLuo.WinFormsUI.Docking.ThemeVS2015.dll" />

        <!-- Metro Framework -->
        <File Id="MetroFramworkDll" Name="MetroFramework.dll" />
        <File Id="MetroFramworkDesignDll.dll" Name="MetroFramework.Design.dll" />

        <!-- MySql -->
        <File Id="MySqlDll" Name="MySql.Data.dll" />

        <!-- Combit List&Label V22 -->
        <File Id="ListLabelDll" Name="combit.ListLabel22.dll" />

        <!-- Diffie-Hellman Encryption -->
        <File Id="HellmannDll" Name="DiffieHellman.dll" />

        <!-- Json(Newtonsoft) -->
        <File Id="NewtonJsonDll" Name="Newtonsoft.Json.dll" />

        <!-- Ssh(Sharp) -->
        <File Id="SharpSshDll" Name="Tamir.SharpSSH.dll" />
      
      </Component>
    </DirectoryRef>


    <DirectoryRef Id="ADDIN" FileSource="$(var.WinBackExeSourcePath)">
        <Component Id="WINBACKEXE" Guid="2F77C4CA-B6D8-46B7-849E-D8126C2A4DB3" Win64="$(var.Win64)">
        
        <!-- Winback Hintergrund-ServerTask -->
        <File Id="WinBackExe" Name="WinbackServerTask.exe" />
        <File Id="WinBackPdb" Name="WinbackServerTask.pdb" />

      </Component>
		</DirectoryRef>

    <DirectoryRef Id="TARGETDIR" >
      <Component Id="WINBACKINI" Guid="c5df0fde-cec7-4847-ac70-6fba42b462ca" Win64="$(var.Win64)">

        <!-- winback.ini wird neu aufgebaut. Vorhandene Einträge werden nicht überschrieben ! -->
        <!-- [winback]-->
        <IniFile Id="WinBack_IpAdresse" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="eMYSQLServerIP" Value="[WINBACKIPADR]" />
        <IniFile Id="WinBack_DBwinback" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="eMySQLDatabase" Value="winback" />
        <IniFile Id="WinBack_DBwbdaten" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="eMySQLDatabaseDaten" Value="wbdaten" />
        <IniFile Id="WinBack_DBuser" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="eMYSQLUser" Value="herbst" />
        <IniFile Id="WinBack_DBpass" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="eMySQLPasswordDatabase" Value="herbst" />

        <IniFile Id="OrgaBack_MainDB" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="MsSQLServer_MainDB" Value="[ORGABACKMAIN]" />
        <IniFile Id="OrgaBack_AdmnDB" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="MsSQLServer_AdmnDB" Value="[ORGABACKADMN]" />
        <IniFile Id="OrgaBack_UserId" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="MsSQLServer_UserId" Value="[ORGABACKUSER]" />
        <IniFile Id="OrgaBack_Passwd" Action="createLine" Directory="TARGETDIR" Section="WinBack" Name="WinBack.ini" Key="MsSQLServer_Passwd" Value="[ORGABACKPASS]" />

      </Component>
    </DirectoryRef>

    <!-- ==================================================================================== -->
    <!-- End of directory structure -->
    <!-- ==================================================================================== -->


    <!-- ==================================================================================== -->
    <!-- Features define which parts of the application can be installed (custom setup) -->
    <!-- ==================================================================================== -->

    <Feature Id="Complete" Title="!(loc.ApplicationName)" Description="!(loc.FeatureCompleteDescription)" Display="expand" Level="1" ConfigurableDirectory="TARGETDIR">
      <!-- A feature block for the main (GUI) program and all its dependencies -->
      <Feature Id="MainProgram" Title="!(loc.FeatureMainProgramTitle)" Description="!(loc.FeatureMainProgramDescription)" Level="1">
        <ComponentRef Id="SHAREDCOMPONENTS" />
        <ComponentRef Id="WINBACKEXE" />
        <ComponentRef Id="WINBACKINI" />
      </Feature>
    </Feature>

    <UI>
      <!-- Define the installer UI -->
      <!-- To add Right click on your project in Solution Explorer and select Add Reference... -->
      <!-- Select the WixUIExtension.dll assembly from the list and click Add -->
      <UIRef Id="UI_Main" />
    </UI>

    <Property Id="WIXUI_INSTALLDIR" Value="TARGETDIR" />
    <Property Id="WIXUI_SERVERS" Value="SERVERS" />

  </Product>    
</Wix>
